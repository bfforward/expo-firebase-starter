import { MD3LightTheme, MD3DarkTheme } from 'react-native-paper';

const commonValues = {};

export const DefaultTheme = {
  light: {
    ...MD3LightTheme,
    ...commonValues,
    colors: {
      ...MD3LightTheme.colors,
      primary: 'rgb(0, 104, 120)',
      onPrimary: 'rgb(255, 255, 255)',
      primaryContainer: 'rgb(166, 238, 255)',
      onPrimaryContainer: 'rgb(0, 31, 37)',
      secondary: 'rgb(104, 71, 192)',
      onSecondary: 'rgb(255, 255, 255)',
      secondaryContainer: 'rgb(232, 221, 255)',
      onSecondaryContainer: 'rgb(33, 0, 93)',
      tertiary: 'rgb(0, 103, 131)',
      onTertiary: 'rgb(255, 255, 255)',
      tertiaryContainer: 'rgb(188, 233, 255)',
      onTertiaryContainer: 'rgb(0, 31, 42)',
      error: 'rgb(186, 26, 26)',
      onError: 'rgb(255, 255, 255)',
      errorContainer: 'rgb(255, 218, 214)',
      onErrorContainer: 'rgb(65, 0, 2)',
      background: 'rgb(251, 252, 253)',
      onBackground: 'rgb(25, 28, 29)',
      surface: 'rgb(251, 252, 253)',
      onSurface: 'rgb(25, 28, 29)',
      surfaceVariant: 'rgb(219, 228, 231)',
      onSurfaceVariant: 'rgb(63, 72, 75)',
      outline: 'rgb(111, 121, 123)',
      outlineVariant: 'rgb(191, 200, 203)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(46, 49, 50)',
      inverseOnSurface: 'rgb(239, 241, 242)',
      inversePrimary: 'rgb(83, 215, 241)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(238, 245, 246)',
        level2: 'rgb(231, 240, 242)',
        level3: 'rgb(223, 236, 238)',
        level4: 'rgb(221, 234, 237)',
        level5: 'rgb(216, 231, 234)',
      },
      surfaceDisabled: 'rgba(25, 28, 29, 0.12)',
      onSurfaceDisabled: 'rgba(25, 28, 29, 0.38)',
      backdrop: 'rgba(41, 50, 52, 0.4)',
      success: 'rgb(56, 107, 1)',
      onSuccess: 'rgb(255, 255, 255)',
      successContainer: 'rgb(183, 244, 129)',
      onSuccessContainer: 'rgb(13, 32, 0)',
      warning: 'rgb(135, 82, 0)',
      onWarning: 'rgb(255, 255, 255)',
      warningContainer: 'rgb(255, 221, 186)',
      onWarningContainer: 'rgb(43, 23, 0)',
    },
  },
  dark: {
    ...MD3DarkTheme,
    ...commonValues,
    colors: {
      ...MD3DarkTheme.colors,
      primary: 'rgb(83, 215, 241)',
      onPrimary: 'rgb(0, 54, 63)',
      primaryContainer: 'rgb(0, 78, 91)',
      onPrimaryContainer: 'rgb(166, 238, 255)',
      secondary: 'rgb(206, 189, 255)',
      onSecondary: 'rgb(57, 5, 144)',
      secondaryContainer: 'rgb(80, 43, 167)',
      onSecondaryContainer: 'rgb(232, 221, 255)',
      tertiary: 'rgb(99, 211, 255)',
      onTertiary: 'rgb(0, 53, 69)',
      tertiaryContainer: 'rgb(0, 77, 99)',
      onTertiaryContainer: 'rgb(188, 233, 255)',
      error: 'rgb(255, 180, 171)',
      onError: 'rgb(105, 0, 5)',
      errorContainer: 'rgb(147, 0, 10)',
      onErrorContainer: 'rgb(255, 180, 171)',
      background: 'rgb(25, 28, 29)',
      onBackground: 'rgb(225, 227, 228)',
      surface: 'rgb(25, 28, 29)',
      onSurface: 'rgb(225, 227, 228)',
      surfaceVariant: 'rgb(63, 72, 75)',
      onSurfaceVariant: 'rgb(191, 200, 203)',
      outline: 'rgb(137, 146, 149)',
      outlineVariant: 'rgb(63, 72, 75)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(225, 227, 228)',
      inverseOnSurface: 'rgb(46, 49, 50)',
      inversePrimary: 'rgb(0, 104, 120)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(28, 37, 40)',
        level2: 'rgb(30, 43, 46)',
        level3: 'rgb(31, 49, 52)',
        level4: 'rgb(32, 50, 54)',
        level5: 'rgb(33, 54, 59)',
      },
      surfaceDisabled: 'rgba(225, 227, 228, 0.12)',
      onSurfaceDisabled: 'rgba(225, 227, 228, 0.38)',
      backdrop: 'rgba(41, 50, 52, 0.4)',
      success: 'rgb(156, 215, 105)',
      onSuccess: 'rgb(26, 55, 0)',
      successContainer: 'rgb(40, 80, 0)',
      onSuccessContainer: 'rgb(183, 244, 129)',
      warning: 'rgb(255, 184, 101)',
      onWarning: 'rgb(72, 42, 0)',
      warningContainer: 'rgb(102, 61, 0)',
      onWarningContainer: 'rgb(255, 221, 186)',
    },
  },
};
